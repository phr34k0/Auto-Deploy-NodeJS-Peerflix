#!/bin/bash

version_node=`curl --silent https://nodejs.org/dist/latest/ | grep "node-v[0-9]\{1\}.[0-9]\{1\}.[0-9]\{1\}-linux-x64.tar.gz" | grep -oP "[0-9].[0-9].[0-9]" | head -n 1`
current_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

install_node_latest()
{
	# Check NODE
	if ! [ -x "$(which node)" ]; then
			echo -e "\n Current Latest Node Version Is $version_node\n\n"
			sleep 5
			clear

		if [ ! -f "$current_dir/node-v$version_node-linux-x64.tar.gz" ]; then
			wget https://nodejs.org/dist/latest/node-v$version_node-linux-x64.tar.gz
			sleep 2
			echo -e "\n\n Extracting Package.. Please wait...\n\n"
			tar -xzf node-v$version_node-linux-x64.tar.gz
		else
			sleep 5
			echo -e "\n\n Extracting Package.. Please wait...\n\n"
			tar -xzf node-v$version_node-linux-x64.tar.gz
		fi

			cd $current_dir/node-v$version_node-linux-x64/bin
			echo -e "Current Dir is - `pwd`"
			sleep 3
			chmod 755 *

		if [ ! -d "/usr/local/bin" ]; then
			echo -e "Dir Doesn't Exist.. Making\n"
			mkdir /usr/local/bin
		else
			echo -e "Dir Exists.. Continuing\n"
		fi

			cp -r * /usr/local/bin
			rm -rf `which npm`

			cd $current_dir/node-v$version_node-linux-x64/include
			echo -e "Current Dir is - `pwd`"
			sleep 3
			chmod 755 *

		if [ ! -d "/usr/local/include" ]; then
			echo -e "Dir Doesn't Exist.. Making\n"
			mkdir /usr/local/include
		else
			echo -e "Dir Exists.. Continuing\n"
		fi

			cp -r * /usr/local/include

			cd $current_dir/node-v$version_node-linux-x64/lib
			echo -e "Current Dir is - `pwd`"
			sleep 3
			chmod 755 *

		if [ ! -d "/usr/local/lib" ]; then
			echo -e "Dir Doesn't Exist.. Making\n"
			mkdir /usr/local/lib
		else
			echo -e "Dir Exists.. Continuing\n"
		fi

			cp -r * /usr/local/lib

			cd $current_dir/node-v$version_node-linux-x64/share
			echo -e "Current Dir is - `pwd`"
			sleep 3
			chmod 755 *

		if [ ! -d "/usr/local/share" ]; then
			echo -e "Dir Doesn't Exist.. Making\n"
			mkdir /usr/local/share
		else
			echo -e "Dir Exists.. Continuing\n"
		fi

			cp -r * /usr/local/share

			ln -sf `which node` /usr/local/bin/nodejs

	elif ! [ -x "$(which nodejs)" ]; then
			ln -sf `which node` /usr/local/bin/nodejs
		
	else
			echo -e "- Node.JS is installed. `which node`. Current Version - `node -v`\n"
	fi

	# Check NPM
	if ! [ -x "$(which npm)" ]; then
			cd $current_dir
			echo -e "Current Dir is - `pwd`"
			sleep 3

		if [ ! -f "$current_dir/install.sh" ]; then
			wget https://npmjs.org/install.sh
			chmod 755 `pwd`/install.sh
			sh `pwd`/install.sh
		fi
		
	else
			echo -e "- NPM is installed. `which npm`. Current Version - v`npm -v`\n"
	fi
}

install_peerflix()
{
	if ! [ -x "$(which peerflix)" ]; then
			npm -g install peerflix
	else
			echo -e "- Peerflix is installed. `which peerflix`\n"
	fi

	

	if ! [ -x "$(which forever)" ]; then
			npm -g install forever
	else
			echo -e "- Forever is installed. `which forever`\n"
	fi

	

	if ! [ -x "$(which peerflix-server)" ]; then
			npm -g install peerflix-server
	else
			echo -e "- Peerflix Server is installed. `which peerflix-server`\n"
	fi

	
}

echo -e "\n\n"
echo -e "---------------------------------"
echo -e " Checking for Installation Now..."
echo -e "---------------------------------\n\n"
clear
echo -e "\n\n-------- Checking for Node and NPM\n\n"
install_node_latest
clear
echo -e "\n\n-------- Checking for Peerflix, Forever and Peerflix Server\n\n"
install_peerflix
clear
echo -e "\n------ Check Everything\n"
install_node_latest
install_peerflix
cd $current_dir
if [ -f "$current_dir/node-v$version_node-linux-x64.tar.gz" ]; then
	echo -e "------ Removing node-v$version_node-linux-x64*\n"
	rm -rf node-v$version_node-linux-x64*
elif [ -f "$current_dir/install.sh" ]; then
	echo -e "------ Removing install.sh\n"
	rm -rf install.sh
fi
sleep 3
exit 0
